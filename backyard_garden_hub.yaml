substitutions:
  <<: !include secrets_ag.yaml
  NAME: backyard_garden_hub
  PREFIX: Backyard Garden Hub
  WIFI_AP_SSID: ESP-BGBH
  REBOOT_TIMEOUT: 120min
  LOG_LEVEL: INFO
  UPDATE_INTERVAL: 15min
  # PINS:
  RAINGAUGE_PIN: D3
  FERNERY_TANK_PIN: D5
  FERNERY_LIGHTS_PIN: D6
  FERNERY_PUMP_PIN: D7
  BACKYARD_LIGHTS_PIN: D8
  # CONFIG:
  RAINFALL_AVG_HOURS: "24"

esphome:
  <<: !include partial/esphome_d1_mini.yaml

globals:
  - id: rainfall_total
    type: float
    restore_value: yes

  - id: rainfall_hourly
    type: float
    restore_value: yes

  - id: pump_enable
    type: bool
    initial_value: "true"
    restore_value: yes

<<: !include partial/wemos_d1_mini_status_led.yaml
<<: !include partial/wifi.yaml
<<: !include partial/mqtt.yaml

text_sensor:
  - <<: !include partial/wifi_ip_addr_text_sensor.yaml

  - id: daytime_text_sensor
    platform: mqtt_subscribe
    topic: info/time/daytime

  - id: rain_forecast_text_sensor
    platform: mqtt_subscribe
    topic: info/weather/forecast/today/rain

  - id: security_motion_outside
    platform: mqtt_subscribe
    topic: security/motion/outside/#
    on_value:
      then:
        if:
          condition:
            lambda: return id(daytime_sensor).state == false && id(hour_sensor).state >= 0;
          then:
            script.execute: light_timer

binary_sensor:
  - id: raingauge_binary
    platform: gpio
    pin: $RAINGAUGE_PIN
    filters:
      - delayed_off: 100ms
    on_release:
      - lambda: id(rainfall_total) += 0.2794;
      - lambda: id(rainfall_hourly) += 0.2794;

  - id: water_tank_sensor
    name: $PREFIX Water Tank
    platform: gpio
    pin:
      number: $FERNERY_TANK_PIN
      mode: INPUT_PULLUP
    device_class: moisture
    filters:
      - delayed_on_off: 5s
    on_press:
      then:
        mqtt.publish:
          topic: notify/maintenance/$NAME/water_tank
          payload: ""
          retain: yes
    on_release:
      then:
        mqtt.publish:
          topic: notify/maintenance/$NAME/water_tank
          payload: $PREFIX - Fernery water tank low!
          retain: yes

  - id: daytime_sensor
    platform: template
    lambda: return id(daytime_text_sensor).state == "YES";
    on_press:
      then:
        - light.turn_off: garden_lights
        - light.turn_off: fernery_lights
    on_release:
      then:
        - light.turn_on: garden_lights
        - light.turn_on: fernery_lights

  - platform: template
    id: pump_active_binary_sensor
    name: $PREFIX Pump Active
    lambda: |-
      return (true
        && id(pump_enable)
        && id(water_tank_sensor).state
        && id(daytime_text_sensor).state == "YES"
        // && id(rain_forecast_text_sensor).state != "YES"
        && id(rainfall_hourly) <= 0.5
        && (id(rainfall_hourly_avg).state * $RAINFALL_AVG_HOURS) <= 2.0
      );

sensor:
  - <<: !include partial/wifi_rssi_sensor.yaml
  - <<: !include partial/uptime_sensor.yaml

  - name: $PREFIX Rainfall
    platform: template
    lambda: return id(rainfall_total);
    update_interval: $UPDATE_INTERVAL
    unit_of_measurement: mm
    accuracy_decimals: 2
    icon: mdi:weather-rainy

  - name: $PREFIX Rainfall Hourly
    platform: template
    lambda: return id(rainfall_hourly);
    update_interval: $UPDATE_INTERVAL
    unit_of_measurement: mm
    accuracy_decimals: 2
    icon: mdi:weather-rainy

  - id: rainfall_hourly_avg
    name: $PREFIX Rainfall Hourly Avg
    platform: template
    update_interval: never
    lambda: return id(rainfall_hourly);
    unit_of_measurement: mm
    accuracy_decimals: 2
    icon: mdi:weather-rainy
    filters:
      sliding_window_moving_average:
        window_size: $RAINFALL_AVG_HOURS
        send_every: 1

  - id: hour_sensor
    platform: mqtt_subscribe
    topic: info/time/hour
    on_value_range:
      below: 0 # midnight
      then:
        - light.turn_off: garden_lights
        - light.turn_off: fernery_lights

switch:
  - id: pump_enable_switch
    name: $PREFIX Pump Enable
    platform: template
    lambda: return id(pump_enable);
    turn_on_action:
      lambda: id(pump_enable) = true;
    turn_off_action:
      lambda: id(pump_enable) = false;

  # TIP41C
  - id: pump_switch
    name: $PREFIX Pump
    platform: gpio
    pin: $FERNERY_PUMP_PIN
    on_turn_on:
      script.execute: pump_timer

  - id: notify_rainfall_day_total
    name: $PREFIX Notify Rainfall
    platform: template
    turn_on_action:
      mqtt.publish:
        topic: notify/maintenance/$NAME/rainfall/day_total
        payload: !lambda |-
          char s[32];
          snprintf(s, sizeof(s), "%0.2f", id(rainfall_total));
          return "Rainfall yesterday: " + to_string(s) + "mm";
        retain: no

output:
  - id: backyard_lights_relay
    platform: gpio
    pin: $BACKYARD_LIGHTS_PIN

  - id: fernery_lights_relay
    platform: gpio
    pin: $FERNERY_LIGHTS_PIN

light:
  - platform: binary
    id: garden_lights
    name: Backyard Garden Lights
    output: backyard_lights_relay
    restore_mode: ALWAYS_OFF

  - platform: binary
    id: fernery_lights
    name: Backyard Fernery Lights
    output: fernery_lights_relay
    restore_mode: ALWAYS_OFF

time:
  - id: ntp_time
    platform: sntp
    servers:
      - $MQTT_BROKER
    on_time:
      - seconds: 0
        minutes: 0
        hours: 10
        then:
          - switch.turn_on: notify_rainfall_day_total
          - lambda: id(rainfall_total) = 0;

      - seconds: 0
        minutes: 0
        hours: /1
        then:
          - component.update: rainfall_hourly_avg
          - lambda: id(rainfall_hourly) = 0;

      - seconds: 0
        minutes: 30
        hours: /2
        then:
          if:
            condition:
              binary_sensor.is_on: pump_active_binary_sensor
            then:
              - switch.turn_on: pump_switch

script:
  - id: pump_timer
    then:
      - delay: 60s
      - switch.turn_off: pump_switch

  - id: light_timer
    mode: restart
    then:
      - light.turn_on: garden_lights
      - light.turn_on: fernery_lights
      - delay: 10min
      - light.turn_off: garden_lights
      - light.turn_off: fernery_lights
