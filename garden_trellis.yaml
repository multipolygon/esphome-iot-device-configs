substitutions:
  <<: !include secrets_ag.yaml
  NAME: garden_trellis
  PREFIX: Garden Trellis
  WIFI_AP_SSID: ESP-GAR-TREL
  REBOOT_TIMEOUT: 5.1h
  LOG_LEVEL: INFO
  ## CONFIG ##
  WARM_WEATHER_TIMER: "90"
  HOT_WEATHER_TIMER: "120"
  ## PINS ##
  I2C_1_PIN: D1
  I2C_2_PIN: D2
  WATER_TANK_SENSOR_PIN: D5
  ACTIVATED_LED_PIN: D6
  PUMP_SWITCH_PIN: D7
  ENABLE_SWITCH_PIN: D8

esphome:
  <<: !include partial/esphome_d1_mini.yaml

<<: !include partial/wemos_d1_mini_status_led.yaml
<<: !include partial/wifi.yaml
<<: !include partial/mqtt.yaml

globals:
  - id: pump_time
    type: int
    restore_value: yes
  - id: temp
    type: int

# https://esphome.io/components/i2c.html
i2c:

text_sensor:
  - <<: !include partial/wifi_ip_addr_text_sensor.yaml

  - id: rain_forecast
    platform: mqtt_subscribe
    topic: info/weather/forecast/today/rain

# https://esphome.io/components/sensor/index.html
sensor:
  - <<: !include partial/wifi_rssi_sensor.yaml
  - <<: !include partial/uptime_sensor.yaml

  # https://esphome.io/components/sensor/sht3xd.html
  - platform: sht3xd
    address: 0x45
    update_interval: 1min

    temperature:
      id: temp_sensor
      name: $PREFIX Temperature
      filters:
        sliding_window_moving_average:
          window_size: 10
          send_every: 10

    humidity:
      id: humid_sensor
      name: $PREFIX Humidity
      filters:
        sliding_window_moving_average:
          window_size: 10
          send_every: 10

  # https://esphome.io/components/sensor/bh1750.html
  - platform: bh1750
    id: lux_sensor
    name: $PREFIX Illuminance
    address: 0x23
    measurement_time: 31
    update_interval: 1min

    filters:
      sliding_window_moving_average:
        window_size: 10
        send_every: 10

  - &pump_time_sensor
    id: pump_time_sensor
    name: $PREFIX Pump Time
    platform: template
    unit_of_measurement: "s"
    icon: mdi:progress-clock
    accuracy_decimals: 0
    lambda: return id(pump_time);
    update_interval: never

  - <<: *pump_time_sensor
    id: pump_time_sensor_daily
    name: $PREFIX Pump Time Daily

# https://esphome.io/components/switch/index.html
switch:
  - id: enable_switch
    platform: gpio
    pin: $ENABLE_SWITCH_PIN
    name: $PREFIX Enable
    restore_mode: ALWAYS_ON

  - id: pump_switch
    platform: gpio
    pin: $PUMP_SWITCH_PIN
    name: $PREFIX Pump
    restore_mode: ALWAYS_OFF
    on_turn_on:
      script.execute: pump_timer

  - platform: restart
    name: $PREFIX Restart

output:
  - id: activated_led
    platform: gpio
    pin: $ACTIVATED_LED_PIN

# https://esphome.io/components/binary_sensor/index.html
binary_sensor:
  - platform: gpio
    pin:
      number: $WATER_TANK_SENSOR_PIN
      mode: INPUT_PULLUP
    id: water_tank_sensor
    name: $PREFIX Water Tank
    device_class: moisture
    filters:
      - delayed_on_off: 5s
    on_press:
      then:
        mqtt.publish:
          topic: notify/maintenance/$NAME/water_tank
          payload: ""
          retain: yes
    on_release:
      then:
        mqtt.publish:
          topic: notify/maintenance/$NAME/water_tank
          payload: $PREFIX - Water tank low!
          retain: yes

  - id: daytime_sensor
    name: $PREFIX Daytime
    platform: template
    device_class: light
    lambda: return id(lux_sensor).state > 100.0;
    on_release:
      then:
        - component.update: pump_time_sensor_daily
        - lambda: id(pump_time) = 0;
        - component.update: pump_time_sensor

  # https://esphome.io/components/binary_sensor/template.html
  - platform: template
    id: active_binary_sensor
    name: $PREFIX Active
    lambda: |-
      return (true
        && id(enable_switch).state
        && id(water_tank_sensor).state
        && id(daytime_sensor).state
        // && id(rain_forecast).state != "YES"
        && id(temp_sensor).state > 10
        && id(temp_sensor).state < 40
        && id(humid_sensor).state < 70
      );

# https://esphome.io/guides/automations.html#script
script:
  - id: pump_timer
    then:
      - if:
          condition:
            lambda: return id(temp_sensor).state > 30;
          then:
            - logger.log:
                format: "${HOT_WEATHER_TIMER} sec timer..."
                level: INFO
            - lambda: id(pump_time) += ${HOT_WEATHER_TIMER};
            - component.update: pump_time_sensor
            - delay: ${HOT_WEATHER_TIMER}s
          else:
            - logger.log:
                format: "${WARM_WEATHER_TIMER} sec timer..."
                level: INFO
            - lambda: id(pump_time) += ${WARM_WEATHER_TIMER};
            - component.update: pump_time_sensor
            - delay: ${WARM_WEATHER_TIMER}s
      - switch.turn_off: pump_switch

# https://esphome.io/components/time.html#sntp-configuration
time:
  - id: ntp_time
    platform: sntp
    servers:
      - $MQTT_BROKER
    on_time:
      - seconds: 0
        minutes: 0
        hours: /3
        then:
          if:
            condition:
              binary_sensor.is_on: active_binary_sensor
            then:
              - output.turn_on: activated_led
              - switch.turn_on: pump_switch
            else:
              output.turn_off: activated_led
