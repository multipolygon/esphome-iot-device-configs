substitutions:
  NAME: rc_shed_water_tank
  PREFIX: Shed Tank
  WIFI_AP_SSID: ESP-ST
  REBOOT_TIMEOUT: 0s
  LOG_LEVEL: INFO
  MQTT_PREFIX: !secret MQTT_PREFIX

esphome:
  <<: !include partial/esphome_d1_mini.yaml
  on_boot:
    - delay: 15min
    - globals.set:
        id: initialized
        value: 'true'

globals:
  - id: initialized
    type: bool
    restore_value: no
    initial_value: 'false'

<<: !include partial/wemos_d1_mini_status_led.yaml
<<: !include partial/wifi.yaml
<<: !include partial/mqtt.yaml

i2c:

text_sensor:
  - <<: !include partial/wifi_ip_addr_text_sensor.yaml

sensor:
  - <<: !include partial/wifi_rssi_sensor.yaml
  - <<: !include partial/uptime_sensor.yaml

  - id: flow
    name: $PREFIX Flow
    platform: pulse_counter
    pin: D6
    update_interval: 5s
    accuracy_decimals: 0
    filters:
      sliding_window_moving_average:
        window_size: 12
        send_every: 12

  - id: light
    name: $PREFIX Light
    platform: adc
    pin: A0
    update_interval: 1min
    filters:
      - multiply: 3.3 
      - sliding_window_moving_average:
          window_size: 10
          send_every: 10

  - platform: sht3xd
    address: 0x45
    update_interval: 1min
    temperature:
      id: temp
      name: $PREFIX Temp
      retain: false
      filters:
        sliding_window_moving_average:
          window_size: 10
          send_every: 10
    humidity:
      id: humid
      name: $PREFIX Humid
      retain: false
      filters:
        sliding_window_moving_average:
          window_size: 10
          send_every: 10    

binary_sensor:
  - id: button
    name: $PREFIX Button
    platform: gpio
    pin:
      number: D3
      mode: INPUT
      inverted: true
    filters:
      delayed_on: 100ms
    on_press:
      then:
        switch.toggle: pump

  - id: daylight
    name: $PREFIX Daylight
    device_class: light
    platform: template
    lambda: return id(light).state > 1.0;
    filters:
      delayed_on_off: 10min
    on_press:
      then:
        if:
          condition:
            lambda: return id(initialized);
          then:
            switch.turn_on: pump

switch:
  # TODO: PWM
  - id: valve
    name: $PREFIX Valve
    platform: gpio
    pin: D5
    on_turn_off:
      switch.turn_off: pump

  - id: pump
    name: $PREFIX Pump
    platform: gpio
    pin: D7
    on_turn_on:
      - switch.turn_on: valve
      - script.execute: flow_watcher
      - script.execute: pump_timer
    on_turn_off:
      - switch.turn_off: valve
      - script.stop: flow_watcher
      - script.stop: pump_timer

  - id: buzzer
    name: $PREFIX Buzzer
    platform: gpio
    pin: D8
    on_turn_on:
      then:
        - delay: 5s
        - switch.turn_off: buzzer

script:
  - id: pump_timer
    then:
      - delay: 10min
      - switch.turn_off: pump

  - id: flow_watcher
    then:
      - delay: 10s
      - while:
          condition:
            lambda: return id(flow).raw_state >= 100;
          then:
            delay: 10s
      - switch.turn_on: buzzer
      - delay: 1ms
      - switch.turn_off: pump
