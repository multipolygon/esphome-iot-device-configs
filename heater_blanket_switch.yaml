substitutions:
  <<: !include secrets_ag.yaml
  NAME: heater_blanket_switch
  PREFIX: Heater Blanket Switch
  WIFI_AP_SSID: ESP-HBS
  REBOOT_TIMEOUT: 120min
  LOG_LEVEL: WARN
  UPDATE_INTERVAL: 15min

esphome:
  <<: !include partial/esphome_sonoff_s26.yaml
  esp8266_restore_from_flash: true
  comment: Sonoff S26 No. 2

<<: !include partial/common.yaml

## https://esphome.io/guides/automations.html#global-variables
globals:
  - id: auto_nighttime
    type: bool
    restore_value: yes

text_sensor:
  - <<: !include partial/wifi_ip_addr_text_sensor.yaml

  - id: daytime_text_sensor
    platform: mqtt_subscribe
    topic: info/time/daytime

sensor:
  - <<: !include partial/wifi_rssi_sensor.yaml
  - <<: !include partial/uptime_sensor.yaml

binary_sensor:
  - id: daytime_sensor
    platform: template
    lambda: return id(daytime_text_sensor).state == "YES";
    filters:
      delayed_on_off: 2h
    on_press:
      then:
        if:
          condition:
            lambda: return id(auto_nighttime);
          then:
            switch.turn_off: relay_switch
    on_release:
      then:
        if:
          condition:
            lambda: return id(auto_nighttime);
          then:
            switch.turn_on: relay_switch

  - id: button_binary_sensor
    platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    filters:
      delayed_off: 500ms
    on_press:
      then:
        switch.toggle: relay_switch

switch:
  - id: relay_switch
    name: $PREFIX
    icon: mdi:bed
    platform: gpio
    pin: GPIO12
    restore_mode: ALWAYS_OFF
    on_turn_off:
      script.stop: timer_script_30min

  - platform: template
    name: $PREFIX 30min
    icon: mdi:progress-clock
    lambda: return id(timer_script_30min).is_running();
    turn_on_action:
      script.execute: timer_script_30min
    turn_off_action:
      ## Restart the timer:
      script.execute: timer_script_30min

  ## https://esphome.io/components/switch/template.html
  - platform: template
    name: $PREFIX Auto Nighttime
    icon: mdi:theme-light-dark
    lambda: return id(auto_nighttime);
    turn_on_action:
      - lambda: id(auto_nighttime) = true;
      - light.turn_on:
          id: green_led
          brightness: 50%
    turn_off_action:
      - lambda: id(auto_nighttime) = false;
      - light.turn_off: green_led

output:
  - platform: esp8266_pwm
    id: green_led_output
    pin:
      number: GPIO13
      inverted: true

light:
  # https://esphome.io/components/light/monochromatic.html
  - id: green_led
    platform: monochromatic
    output: green_led_output

script:
  - id: timer_script_30min
    mode: restart
    then:
      - switch.turn_on: relay_switch
      - delay: 30min
      - switch.turn_off: relay_switch
